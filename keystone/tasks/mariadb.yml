---

- name: Install mariadb
  yum: name="{{ item }}" state=present
  with_items:
  - mariadb
  - mariadb-server
  - python2-PyMySQL
  become: yes
  when: keystone_backend == 'mysql'

- name: make mariadb configuration
  template:
    src: mycnf.j2
    dest: "/etc/my.cnf.d/openstack.cnf"
  become: yes
  when: keystone_backend == 'mysql'

- name: Start mariadb
  become: yes
  systemd: name=mariadb.target state=started enabled=yes
  ignore_errors: "{{ ansible_check_mode }}"
  register: start_mariadb
  when: keystone_backend == 'mysql'

- name: generate mariadb root pw if not set
  set_fact:
    mariadb_root_pass: "{{ mariadb_root_pass if mariadb_root_pass is defined else lookup('password', '/dev/null length=15 chars=ascii_letters,digits') }}"
  when: keystone_backend == 'mysql'

- name: generate keystone db pw if not set
  set_fact:
    keystone_db_pass: "{{ keystone_db_pass if keystone_db_pass is defined else lookup('password', '/dev/null length=15 chars=ascii_letters,digits') }}"
  when: keystone_backend == 'mysql'

- name: print generated mariadb password
  debug:
    msg: "mariadb root password {{ mariadb_root_pass }}"
  delegate_to: localhost
  when: keystone_backend == 'mysql'

- name: print generated keystone db password
  debug:
    msg: "keystone db password {{ keystone_db_pass }}"
  delegate_to: localhost
  when: keystone_backend == 'mysql'

- name: make root my.cnf
  become: yes
  template: src=root.cnf.j2 dest=/root/.my.cnf mode=0600
  when: keystone_backend == 'mysql'

- name: wait until mariadb started
  wait_for:
    port: 3306
    delay: "{{ 10 if start_mariadb.changed else 0 }}"
    sleep: 5
  when: keystone_backend == 'mysql'

- name: update mariadb root password for all root accounts
  become: yes
  mysql_user:
    name: root
    host: "{{ item }}"
    password: "{{ mariadb_root_pass }}"
    login_user: root
    login_password: "{{ mariadb_root_pass }}"
    check_implicit_admin: yes
    priv: "*.*:ALL,GRANT"
    state: present
  with_items:
    - localhost
    - %
  when: keystone_backend == 'mysql'

- name: remove anonymous user
  become: yes
  mysql_user: name='' host_all=yes state=absent login_user=root login_password="{{ mariadb_root_pass }}"
  when: keystone_backend == 'mysql'

- name: remove the test database
  become: yes
  mysql_db: db=test state=absent login_user=root login_password="{{ mariadb_root_pass }}"
  when: keystone_backend == 'mysql'

- name: flush privileges
  become: yes
  command: mysql -u root --execute="FLUSH PRIVILEGES"
  when: keystone_backend == 'mysql'

- name: add keystone user
  become: yes
  mysql_user: name=keystone host="{{ item }}" password="{{ keystone_db_password }}" state=present login_user=root login_password="{{ mariadb_root_pass }}"
  with_items:
    - localhost
    - %
  when: keystone_backend == 'mysql'

- name: add keystone db
  become: yes
  mysql_db: db=keystone state=present login_user=root login_password="{{ mariadb_root_pass }}"
  when: keystone_backend == 'mysql'

### XXX pass: mysql root pw
