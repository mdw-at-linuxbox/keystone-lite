---

- name: set apache servername
  replace:
    path: /etc/httpd/conf/httpd.conf
    regexp: '(\n)#*(ServerName\b).*?$'
    replace: '\1\2 {{ ansible_fqdn }}'
  become: yes
  ignore_errors: "{{ ansible_check_mode }}"
  when: keystone_frontend == 'apache'

- name: see if wsgi config was copied already
  stat:
    path: /etc/httpd/conf.d/wsgi-keystone.conf
  register: wsgi_config_exists
  when: keystone_frontend == 'apache'

- name: copy wsgi conf file
  copy:
    src: /usr/share/keystone/wsgi-keystone.conf
    dest: /etc/httpd/conf.d/wsgi-keystone.conf
    remote_src: yes
  become: yes
  ignore_errors: "{{ ansible_check_mode }}"
  when:
  - keystone_frontend == 'apache'
  - not wsgi_config_exists.stat.exists

- name: see if wsgi conf file was mutated
  command: egrep -q SSLEngine /etc/httpd/conf.d/wsgi-keystone.conf
  become: yes
  register: keystone_wsgi_configuration_has_ssl
  failed_when: "keystone_wsgi_configuration_has_ssl.rc > 1"
  check_mode: no
  ignore_errors: "{{ ansible_check_mode }}"
  changed_when: no
  when:
  - keystone_frontend == 'apache'
  - wsgi_config_exists.stat.exists

- name: mutate wsgi conf file for ssl
  replace:
    path: /etc/httpd/conf.d/wsgi-keystone.conf
    regexp: "(</Directory>\n)"
    replace: "\\1    SSLEngine on\n    SSLCertificateFile /etc/keystone/private/{{ inventory_hostname_short }}.pem\n    SSLCertificateKeyFile /etc/keystone/private/{{ inventory_hostname_short }}.key\n    SSLCACertificateFile {{ local_ca_path }}\n"
  become: yes
  ignore_errors: "{{ ansible_check_mode }}"
  when:
  - keystone_frontend == 'apache'
  - host_certs is defined
  - not wsgi_config_exists.stat.exists or keystone_wsgi_configuration_has_ssl.rc == 1

#- name: mutate httpd configuration too
#  file:
#    path: /etc/httpd/conf.d/ssl.conf
#    regexp: "localhost"
#    replace: "{{ ansible_hostname }}"
#  become: yes
#  ignore_errors: "{{ ansible_check_mode }}"
#  when:
#  - keystone_frontend == 'apache'
#  - host_certs is defined
